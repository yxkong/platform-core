<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.platform.core.persistence.mapper.sys.SysUserMapper">

	 <resultMap id="BaseResultMap" type="com.github.platform.core.sys.domain.common.entity.SysUserBase">
    	 <id column="id" property="id" /> 
		 <id column="deptId" property="deptId" />
		 <id column="loginName" property="loginName" />
		 <id column="userName" property="userName" />
		 <id column="email" property="email" />
		 <id column="mobile" property="mobile" />
		 <id column="pwd" property="pwd" />
		 <id column="salt" property="salt" />
		 <id column="channel" property="channel" />
		 <id column="tenantId" property="tenantId" />
		 <id column="deleted" property="deleted" />
		 <id column="status" property="status" />
		 <id column="createBy" property="createBy" />
		 <id column="createTime" property="createTime" />
		 <id column="updateBy" property="updateBy" />
		 <id column="updateTime" property="updateTime" />
		 <id column="remark" property="remark" />
    </resultMap>
	<resultMap  id="AllResultMap"  type="com.github.platform.core.sys.domain.common.entity.SysUserBase" extends="BaseResultMap">
		<id column="secretKey" property="secretKey" />
	</resultMap>
	<resultMap  id="DTOResultMap"  type="com.github.platform.core.sys.domain.dto.SysUserDto" extends="BaseResultMap">
		<id column="deptName" property="deptName" />
	</resultMap>

    <sql id="BaseColumnList">
    	 t.id,
 		 t.dept_id as deptId ,
 		 t.login_name as loginName ,
 		 t.user_name as userName ,
 		 t.email,
 		 t.mobile,
 		 t.pwd,
 		 t.salt,
		 t.channel ,
    	 t.secret_key as secretKey ,
    	 t.post_code as postCode ,
    	 t.last_modify_pwd_time as lastModifyPwdTime ,
 		 t.tenant_id as tenantId ,
 		 t.deleted  ,
 		 t.status  ,
 		 t.create_by as createBy ,
 		 t.create_time as createTime ,
 		 t.update_by as updateBy ,
 		 t.update_time as updateTime ,
 		 t.remark
    </sql>

	<insert id="insert" useGeneratedKeys="true"  keyProperty="id" parameterType="com.github.platform.core.sys.domain.common.entity.SysUserBase">
		insert into  t_sys_user
		<trim prefix="(" suffix=")" suffixOverrides=","> 
 			<if test="id != null">
 				id,
 			</if>
 			<if test="deptId != null">
 				dept_id,
 			</if>
 			<if test="loginName != null">
 				login_name,
 			</if>
 			<if test="userName != null">
 				user_name,
 			</if>
 			<if test="email != null">
				email,
 			</if>
			<if test="mobile != null">
 				mobile,
 			</if>
 			<if test="pwd != null">
 				pwd,
 			</if>
 			<if test="salt != null">
 				salt,
 			</if>
			<if test="postCode != null and postCode != ''">
				post_code,
			</if>
			<if test="channel != null">
				channel,
 			</if>
 			<if test="tenantId != null">
 				tenant_id,
 			</if>
 			<if test="status != null">
 				status,
 			</if>
 			<if test="createBy != null">
 				create_by,
 			</if>
 			<if test="createTime != null">
 				create_time,
 			</if>
 			<if test="updateBy != null">
 				update_by,
 			</if>
 			<if test="updateTime != null">
 				update_time,
 			</if>
 			<if test="remark != null">
 				remark,
 			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
 			<if test="id != null">
 				#{id},
 			</if>
 			<if test="deptId != null">
 				#{deptId},
 			</if>
 			<if test="loginName != null">
 				#{loginName},
 			</if>
 			<if test="userName != null">
 				#{userName},
 			</if>
 			<if test="email != null">
 				#{email},
 			</if>
			<if test="mobile != null">
 				#{mobile},
 			</if>
 			<if test="pwd != null">
 				#{pwd},
 			</if>
 			<if test="salt != null">
 				#{salt},
 			</if>
			<if test="postCode != null and postCode != ''">
 				#{postCode},
 			</if>
			<if test="channel != null">
 				#{channel},
 			</if>
 			<if test="tenantId != null">
 				#{tenantId},
 			</if>
 			<if test="status != null">
 				#{status},
 			</if>
 			<if test="createBy != null">
 				#{createBy},
 			</if>
 			<if test="createTime != null">
 				#{createTime},
 			</if>
 			<if test="updateBy != null">
 				#{updateBy},
 			</if>
 			<if test="updateTime != null">
 				#{updateTime},
 			</if>
 			<if test="remark != null">
 				#{remark},
 			</if>
		</trim>
	</insert>
	
	<update id="updateById" parameterType="com.github.platform.core.sys.domain.common.entity.SysUserBase">
		update   t_sys_user
 		 <set>
 			 <if test="deptId != null">
 				dept_id = #{deptId},
 			 </if>
 			 <if test="loginName != null  and loginName != ''">
 				login_name = #{loginName},
 			 </if>
 			 <if test="userName != null  and userName != ''">
 				user_name = #{userName},
 			 </if>
 			 <if test="email != null and email != ''">
				 email = #{email},
 			 </if>
			 <if test="mobile != null and mobile != ''">
 				mobile = #{mobile},
 			 </if>
 			 <if test="pwd != null and pwd != ''">
 				pwd = #{pwd},
 			 </if>
 			 <if test="salt != null and salt != ''">
 				salt = #{salt},
 			 </if>
			 <if test="channel != null and channel != ''">
				 channel = #{channel},
 			 </if>
		     <if test="avatar != null and avatar != ''">
			     avatar = #{avatar},
		     </if>
		     <if test="secretKey != null and secretKey != ''">
			     secret_key = #{secretKey},
		     </if>
		     <if test="postCode != null and postCode != ''">
			    post_code =  #{postCode},
		     </if>
 			 <if test="tenantId != null">
 				tenant_id = #{tenantId},
 			 </if>
 			 <if test="status != null">
 				status = #{status},
 			 </if>
		     <if test="deleted != null">
			     deleted = #{deleted},
		     </if>
 			 <if test="createBy != null and createBy != ''">
 				create_by = #{createBy},
 			 </if>
 			 <if test="createTime != null">
 				create_time = #{createTime},
 			 </if>
 			 <if test="updateBy != null">
 				update_by = #{updateBy},
 			 </if>
 			 <if test="updateTime != null">
 				update_time = #{updateTime},
 			 </if>
 			 <if test="remark != null">
 				remark = #{remark},
 			 </if>
 		 </set>
     where id = #{id}
	</update>

	<update id="modifyPwd" parameterType="com.github.platform.core.sys.domain.common.entity.SysUserBase">
		update   t_sys_user
		<set>
			<if test="salt != null and salt != ''">
				salt = #{salt},
			</if>
			<if test="pwd != null and pwd != ''">
				pwd = #{pwd},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy},
			</if>
			last_modify_pwd_time = #{lastModifyPwdTime},
		</set>
		where id = #{id}
	</update>
	<select id="findById" resultMap="AllResultMap" parameterType="java.lang.Long">
		select <include refid="BaseColumnList" /> from t_sys_user t where t.id=#{id}
	</select>

	<select id="findByLoginName" resultMap="AllResultMap" >
		select <include refid="BaseColumnList" /> from t_sys_user t
		where t.login_name = #{loginName}
		<if test="tenantId != null">
			and t.tenant_id = #{tenantId}
		</if>
	</select>

	<select id="findByMobile" resultMap="AllResultMap">
		select <include refid="BaseColumnList" /> from t_sys_user t
		where t.mobile = #{mobile}
		<if test="tenantId != null">
			and t.tenant_id = #{tenantId}
		</if>
	</select>
	<select id="findBySecretKey" resultMap="AllResultMap">
		select <include refid="BaseColumnList" /> from t_sys_user t
		where t.secret_key = #{secretKey}
	</select>
	<select id="findByIds" resultMap="AllResultMap" parameterType="java.lang.Long">
		select <include refid="BaseColumnList" /> from t_sys_user
		<where>
			<foreach item="id"  collection="ids" open="id  in (" separator="," close=")" >
				#{id}
			</foreach>
		</where>
		limit 200
	</select>
	<select id="findListBy" resultMap="DTOResultMap" parameterType="com.github.platform.core.sys.domain.common.entity.SysUserBase">
		select 
 		<include refid="BaseColumnList" />
 		from t_sys_user t
 		<where>
			<if test="deptId != null">
				and t.dept_id = #{deptId}
			</if>
		    <if test="loginName != null and loginName != ''">
				and t.login_name  like concat ('%',#{loginName},'%')
 			</if>
 			<if test="userName != null  and userName != ''">
				and t.user_name  like concat ('%',#{userName},'%')
 			</if>
 			<if test="mobile != null and mobile != ''">
				and t.mobile  like concat ('%',#{mobile},'%')
 			</if>
			<if test="channel != null">
				and t.channel = #{channel}
			</if>
			<if test="tenantId != null">
				and t.tenant_id = #{tenantId}
			</if>
			<if test="status != null">
				and t.status = #{status}
			</if>
 			<if test="createTime != null">
 				and t.create_time = #{createTime}
 			</if>
			<if test="searchStartTime != null ">
				and t.create_time <![CDATA[>=]]> #{searchStartTime}
			</if>
			<if test="searchEndTime != null ">
				and t.create_time <![CDATA[<=]]>  #{searchEndTime}
			</if>
		</where>
		order by t.id desc
	</select>
	<select id="findListByRole" resultMap="DTOResultMap">
		select
		<include refid="BaseColumnList" />
		from t_sys_user t,t_sys_user_role ur
		where t.id = ur.user_id
		and ur.role_key = #{roleKey}
		<if test="user.deptId != null">
			and t.dept_id = #{user.deptId},
		</if>
		<if test="user.loginName != null and user.loginName != ''">
			and t.login_name  like concat ('%',#{user.loginName},'%')
		</if>
		<if test="user.userName != null and user.userName != ''">
			and t.user_name  like concat ('%',#{user.userName},'%')
		</if>
		<if test="user.mobile != null and user.mobile !=''">
			and t.mobile  like concat ('%',#{user.mobile},'%')
		</if>
		<if test="user.channel != null">
			and t.channel = #{user.channel}
		</if>
		<if test="user.tenantId != null">
			and t.tenant_id = #{user.tenantId}
		</if>
		<if test="user.status != null">
			and t.status = #{user.status}
		</if>
		<if test="user.searchStartTime != null ">
			and t.create_time <![CDATA[>=]]> #{user.searchStartTime}
		</if>
		<if test="user.searchEndTime != null ">
			and t.create_time <![CDATA[<=]]>  #{user.searchEndTime}
		</if>
		order by t.id
	</select>
	<select id="findListByDept" resultMap="DTOResultMap" >
		select
		<include refid="BaseColumnList" />, d.dept_name as deptName
		from t_sys_user t
		inner join t_sys_dept d on t.dept_id = d.id
		where t.dept_id  in
		<foreach item="id"  collection="deptIds" open=" (" separator="," close=")" >
			#{id}
		</foreach>
		<if test="user.loginName != null and user.loginName != ''">
			and t.login_name  like concat ('%',#{user.loginName},'%')
		</if>
		<if test="user.userName != null and user.userName != ''">
			and t.user_name  like concat ('%',#{user.userName},'%')
		</if>
		<if test="user.mobile != null and user.mobile !=''">
			and t.mobile  like concat ('%',#{user.mobile},'%')
		</if>
		<if test="user.channel != null">
			and t.channel = #{user.channel}
		</if>
		<if test="user.tenantId != null">
			and t.tenant_id = #{user.tenantId}
		</if>
		<if test="user.status != null">
			and t.status = #{user.status}
		</if>
	</select>
	<select id="findListByCount" resultType="java.lang.Long"  parameterType="com.github.platform.core.sys.domain.common.entity.SysUserBase">
		select  count(t.id)
		from t_sys_user t
		<where>
			<if test="deptId != null">
				and t.dept_id = #{deptId}
			</if>
			<if test="loginName != null">
				and t.login_name = #{loginName}
			</if>
			<if test="userName != null">
				and t.user_name  like concat ('%',#{userName},'%')
			</if>
			<if test="mobile != null">
				and t.mobile  like concat ('%',#{mobile},'%')
			</if>
			<if test="channel != null">
				and t.channel = #{channel}
			</if>
			<if test="tenantId != null">
				and t.tenant_id = #{tenantId}
			</if>
		</where>
	</select>

	<select id="fuzzySearch" resultType="com.github.platform.core.sys.domain.dto.SysUserDto">
		select  t.id,
		        t.login_name as loginName ,
		        t.user_name as userName
		from t_sys_user t where t.status = 1 and
		t.login_name  like concat ('%',#{loginName},'%')
		and t.tenant_id = #{tenantId}
	</select>
	<select id="queryByUsers" resultType="com.github.platform.core.sys.domain.dto.SysUserDto">
		<!--没有传入数据抛异常-->
		<if test="users != null and users.size() > 0">
			select  t.id,
			t.login_name as loginName ,
			t.user_name as userName,
			t.email,
			t.mobile
			from t_sys_user t where
			t.login_name IN
			<foreach item="user" collection="users" open="(" separator="," close=")">
				#{user}
			</foreach>
			<if test="tenantId != null">
				and t.tenant_id = #{tenantId}
			</if>
		</if>
	</select>
	<select id="queryByRoleKeys" resultType="com.github.platform.core.sys.domain.dto.SysUserDto">
		<if test="roleKeys != null and roleKeys.size() > 0">
			select  t.id,
			t.login_name as loginName ,
			t.user_name as userName
			from t_sys_user t
			JOIN t_sys_user_role r ON t.id = r.user_id
			WHERE
			r.role_key in
			<foreach item="roleKey" collection="roleKeys" open="(" separator="," close=")">
				#{roleKey}
			</foreach>
			<if test="tenantId != null">
				and t.tenant_id = #{tenantId}
			</if>
		</if>
	</select>

</mapper>