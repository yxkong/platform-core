<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.platform.core.persistence.mapper.schedule.SysJobMapper">

	<resultMap type="com.github.platform.core.schedule.domain.common.entity.SysJobBase" id="BaseResultMap">
		<id column="id" property="id" />
		<id column="name" property="name" />
		<id column="beanName" property="beanName" />
		<id column="jobType" property="jobType" />
		<id column="handlerParam" property="handlerParam" />
		<id column="cronExpression" property="cronExpression" />
		<id column="callBackUrl" property="callBackUrl" />
		<id column="accessToken" property="accessToken" />
		<id column="startDate" property="startDate" />
		<id column="endDate" property="endDate" />
		<id column="retryCount" property="retryCount" />
		<id column="retryInterval" property="retryInterval" />
		<id column="monitorTimeout" property="monitorTimeout" />
		<id column="tenantId" property="tenantId" />
		<id column="jobStatus" property="jobStatus" />
		<id column="subJobIds" property="subJobIds" />
		<id column="status" property="status" />
		<id column="createTime" property="createTime" />
		<id column="createBy" property="createBy" />
		<id column="updateTime" property="updateTime" />
		<id column="updateBy" property="updateBy" />
		<id column="remark" property="remark" />
    </resultMap>
    <sql id="BaseColumnList">
		t.id,
		t.name,
		t.bean_name as beanName,
		t.job_type as jobType,
		t.handler_param as handlerParam,
		t.call_back_url as callBackUrl,
		t.access_token as accessToken,
		t.cron_expression as cronExpression,
		t.start_date as startDate,
		t.end_date as endDate,
		t.retry_count as retryCount,
		t.retry_interval as retryInterval,
		t.monitor_timeout as monitorTimeout,
		t.tenant_id as tenantId,
		t.job_status as jobStatus,
		t.sub_job_ids as subJobIds,
		t.status,
		t.create_time as createTime,
		t.create_by as createBy,
		t.update_time as updateTime,
		t.update_by as updateBy,
		t.remark
    </sql>

	<insert id="insert" useGeneratedKeys="true"  keyProperty="id" parameterType="com.github.platform.core.schedule.domain.common.entity.SysJobBase">
		insert into t_sys_job
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="beanName != null">
				bean_name,
			</if>
			<if test="jobType != null">
				job_type,
			</if>
			<if test="handlerParam != null">
				handler_param,
			</if>
			<if test="callBackUrl != null">
				call_back_url,
			</if>
		    <if test="accessToken != null">
			    access_token,
			</if>
			<if test="cronExpression != null">
				cron_expression,
			</if>
			<if test="startDate != null">
				start_date,
			</if>
			<if test="endDate != null">
				end_date,
			</if>
			<if test="retryCount != null">
				retry_count,
			</if>
			<if test="retryInterval != null">
				retry_interval,
			</if>
			<if test="monitorTimeout != null">
				monitor_timeout,
			</if>
		    <if test="jobStatus != null">
			    job_status,
			</if>
		    <if test="subJobIds != null">
			    sub_job_ids,
			</if>
			<if test="tenantId != null">
				tenant_id,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateBy != null">
				update_by,
			</if>
			<if test="remark != null">
				remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id != null">
				#{id},
			</if>
			<if test="name != null">
				#{name},
			</if>
			<if test="beanName != null">
				#{beanName},
			</if>
			<if test="jobType != null">
				#{jobType},
			</if>
			<if test="handlerParam != null">
				#{handlerParam},
			</if>
			<if test="callBackUrl != null">
				#{callBackUrl},
			</if>
			<if test="accessToken != null">
				#{accessToken},
			</if>
			<if test="cronExpression != null">
				#{cronExpression},
			</if>
			<if test="startDate != null">
				#{startDate},
			</if>
			<if test="endDate != null">
				#{endDate},
			</if>
			<if test="retryCount != null">
				#{retryCount},
			</if>
			<if test="retryInterval != null">
				#{retryInterval},
			</if>
			<if test="monitorTimeout != null">
				#{monitorTimeout},
			</if>
			<if test="jobStatus != null">
				#{jobStatus},
			</if>
			<if test="subJobIds != null">
				#{subJobIds},
			</if>
			<if test="tenantId != null">
				#{tenantId},
			</if>
			<if test="status != null">
				#{status},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="createBy != null">
				#{createBy},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			<if test="updateBy != null">
				#{updateBy},
			</if>
			<if test="remark != null">
				#{remark},
			</if>
		</trim>
	</insert>
	
	<update id="updateById" parameterType="com.github.platform.core.schedule.domain.common.entity.SysJobBase">
		update t_sys_job
		<set>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="beanName != null">
				bean_name = #{beanName},
			</if>
			<if test="jobType != null">
				job_type = #{jobType},
			</if>
			<if test="handlerParam != null">
				handler_param = #{handlerParam},
			</if>
			<if test="callBackUrl != null">
				call_back_url = #{callBackUrl},
			</if>
			<if test="accessToken != null">
				access_token = #{accessToken},
			</if>
			<if test="cronExpression != null">
				cron_expression = #{cronExpression},
			</if>
			<if test="startDate != null">
				start_date = #{startDate},
			</if>
			<if test="endDate != null">
				end_date = #{endDate},
			</if>
			<if test="retryCount != null">
				retry_count = #{retryCount},
			</if>
			<if test="retryInterval != null">
				retry_interval = #{retryInterval},
			</if>
			<if test="monitorTimeout != null">
				monitor_timeout = #{monitorTimeout},
			</if>
			<if test="jobStatus != null">
				job_status = #{jobStatus},
			</if>
			<if test="subJobIds != null">
				sub_job_ids = #{subJobIds},
			</if>
			<if test="tenantId != null">
				tenant_id = #{tenantId},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="createBy != null">
				create_by = #{createBy},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy},
			</if>
			<if test="remark != null">
				remark = #{remark},
			</if>
		</set>
		where id = #{id}
	</update>
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select <include refid="BaseColumnList" /> from t_sys_job t where t.id=#{id}
	</select>
	<select id="findByIds" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select <include refid="BaseColumnList" /> from t_sys_job t
		<where>
			<foreach item="id"  collection="ids" open="id  in (" separator="," close=")" >
				#{id}
			</foreach>
		</where>
		limit 200
	</select>
	<select id="findList" resultMap="BaseResultMap" parameterType="java.util.Map">
		select 
		<include refid="BaseColumnList" />
		from t_sys_job t
		<where>
			<if test="id != null">
				and t.id = #{id}
			</if>
			<if test="name != null">
				and t.name = #{name}
			</if>
			<if test="beanName != null">
				and t.bean_name = #{beanName}
			</if>
		    <if test="jobType != null">
				and t.job_type = #{jobType}
			</if>
			<if test="handlerParam != null">
				and t.handler_param = #{handlerParam}
			</if>
			<if test="cronExpression != null">
				and t.cron_expression = #{cronExpression}
			</if>
			<if test="startDate != null">
				and t.start_date = #{startDate}
			</if>
			<if test="endDate != null">
				and t.end_date = #{endDate}
			</if>
			<if test="retryCount != null">
				and t.retry_count = #{retryCount}
			</if>
			<if test="retryInterval != null">
				and t.retry_interval = #{retryInterval}
			</if>
			<if test="monitorTimeout != null">
				and t.monitor_timeout = #{monitorTimeout}
			</if>
			<if test="tenantId != null">
				and t.tenant_id = #{tenantId}
			</if>
			<if test="status != null">
				and t.status = #{status}
			</if>
			<if test="createBy != null">
				and t.create_by = #{createBy}
			</if>
			<if test="updateBy != null">
				and t.update_by = #{updateBy}
			</if>
			<if test="searchStartTime != null">
				and t.create_time <![CDATA[>=]]> #{searchStartTime}
			</if>
			<if test="searchEndTime != null">
				and t.create_time <![CDATA[<=]]> #{searchEndTime}
			</if>
		</where>
	</select>
	<select id="findListBy" resultMap="BaseResultMap" parameterType="com.github.platform.core.schedule.domain.common.entity.SysJobBase">
		select 
		<include refid="BaseColumnList" />
		from t_sys_job t
		<where>
			<if test="id != null">
				and t.id = #{id}
			</if>
			<if test="name != null">
				and t.name  like concat('%',#{name},'%')
			</if>
			<if test="beanName != null">
				and t.bean_name like concat('%',#{beanName},'%')
			</if>
			<if test="jobType != null">
				and t.job_type = #{jobType}
			</if>
			<if test="handlerParam != null">
				and t.handler_param = #{handlerParam}
			</if>
			<if test="cronExpression != null">
				and t.cron_expression = #{cronExpression}
			</if>
			<if test="startDate != null">
				and t.start_date = #{startDate}
			</if>
			<if test="endDate != null">
				and t.end_date = #{endDate}
			</if>
			<if test="retryCount != null">
				and t.retry_count = #{retryCount}
			</if>
			<if test="retryInterval != null">
				and t.retry_interval = #{retryInterval}
			</if>
			<if test="monitorTimeout != null">
				and t.monitor_timeout = #{monitorTimeout}
			</if>
			<if test="jobStatus != null">
				and t.job_status = #{jobStatus}
			</if>
			<if test="tenantId != null">
				and t.tenant_id = #{tenantId}
			</if>
			<if test="status != null">
				and t.status = #{status}
			</if>
			<if test="createBy != null">
				and t.create_by = #{createBy}
			</if>
			<if test="updateBy != null">
				and t.update_by = #{updateBy}
			</if>
			<if test="searchStartTime != null">
				and t.create_time <![CDATA[>=]]> #{searchStartTime}
			</if>
			<if test="searchEndTime != null">
				and t.create_time <![CDATA[<=]]> #{searchEndTime}
			</if>
		</where>
	</select>
	<select id="findListCount" resultType="java.lang.Long"  parameterType="java.util.Map">
		select count(t.id) from t_sys_job t
		<where>
			<if test="id != null">
				and t.id = #{id}
			</if>
			<if test="name != null">
				and t.name = #{name}
			</if>
			<if test="beanName != null">
				and t.bean_name = #{beanName}
			</if>
			<if test="jobType != null">
				and t.job_type = #{jobType}
			</if>
			<if test="handlerParam != null">
				and t.handler_param = #{handlerParam}
			</if>
			<if test="cronExpression != null">
				and t.cron_expression = #{cronExpression}
			</if>
			<if test="startDate != null">
				and t.start_date = #{startDate}
			</if>
			<if test="endDate != null">
				and t.end_date = #{endDate}
			</if>
			<if test="retryCount != null">
				and t.retry_count = #{retryCount}
			</if>
			<if test="retryInterval != null">
				and t.retry_interval = #{retryInterval}
			</if>
			<if test="monitorTimeout != null">
				and t.monitor_timeout = #{monitorTimeout}
			</if>
			<if test="jobStatus != null">
				and t.job_status = #{jobStatus}
			</if>
			<if test="tenantId != null">
				and t.tenant_id = #{tenantId}
			</if>
			<if test="status != null">
				and t.status = #{status}
			</if>
			<if test="createTime != null">
				and t.create_time = #{createTime}
			</if>
			<if test="createBy != null">
				and t.create_by = #{createBy}
			</if>
			<if test="updateTime != null">
				and t.update_time = #{updateTime}
			</if>
			<if test="updateBy != null">
				and t.update_by = #{updateBy}
			</if>
			<if test="remark != null">
				and t.remark = #{remark}
			</if>
		</where>
	</select>
	<select id="findListByCount" resultType="java.lang.Long"  parameterType="com.github.platform.core.schedule.domain.common.entity.SysJobBase">
		select count(t.id) from t_sys_job t
		<where>
			<if test="id != null">
				and t.id = #{id}
			</if>
			<if test="name != null">
				and t.name = #{name}
			</if>
			<if test="beanName != null">
				and t.bean_name = #{beanName}
			</if>
			<if test="handlerParam != null">
				and t.handler_param = #{handlerParam}
			</if>
			<if test="cronExpression != null">
				and t.cron_expression = #{cronExpression}
			</if>
			<if test="startDate != null">
				and t.start_date = #{startDate}
			</if>
			<if test="endDate != null">
				and t.end_date = #{endDate}
			</if>
			<if test="retryCount != null">
				and t.retry_count = #{retryCount}
			</if>
			<if test="retryInterval != null">
				and t.retry_interval = #{retryInterval}
			</if>
			<if test="monitorTimeout != null">
				and t.monitor_timeout = #{monitorTimeout}
			</if>
			<if test="jobStatus != null">
				and t.job_status = #{jobStatus}
			</if>
			<if test="tenantId != null">
				and t.tenant_id = #{tenantId}
			</if>
			<if test="status != null">
				and t.status = #{status}
			</if>
			<if test="createTime != null">
				and t.create_time = #{createTime}
			</if>
			<if test="createBy != null">
				and t.create_by = #{createBy}
			</if>
			<if test="updateTime != null">
				and t.update_time = #{updateTime}
			</if>
			<if test="updateBy != null">
				and t.update_by = #{updateBy}
			</if>
			<if test="remark != null">
				and t.remark = #{remark}
			</if>
		</where>
	</select>
	<select id="findByBeanNameNotId"
	        resultType="com.github.platform.core.schedule.domain.common.entity.SysJobBase">
		select
		<include refid="BaseColumnList" />
		from t_sys_job t where t.id != #{id} and t.bean_name = #{beanName} and t.tenant_id = #{tenantId}
	</select>
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from t_sys_job where id = #{id}
	</delete>
	<delete id="deleteByIds" parameterType="java.lang.Long">
		<!--没有传入数据抛异常，不会全删-->
		<if test="ids != null and ids.length>0">
			delete from t_sys_job
			<where>
				<foreach item="id"  collection="ids" open="id  in (" separator="," close=")" >
					#{id}
				</foreach>
			</where>
		</if>
	</delete>
</mapper>